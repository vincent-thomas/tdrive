name: CI

on:
  push:
    branches: ["main"]

jobs:
  typecheck-and-build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - uses: pnpm/action-setup@v2
        with:
          version: 8

      - uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: "pnpm"

      - uses: actions/cache@v3
        with:
          path: |
            ${{ github.workspace }}/.next/cache
          key: ${{ runner.os }}-nextjs-${{ hashFiles('**/pnpm-lock.yaml') }}-${{ hashFiles('**/*.[jt]s', '**/*.[jt]sx') }}
          restore-keys: |
            ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json') }}-

      - run: pnpm install
      - run: pnpm p:gen
      - run: SKIP_ENV_VALIDATION=1 pnpm build

  # deploy-preview:
  #   runs-on: ubuntu-latest
  #   environment:
  #     name: preview
  #     url: ${{ steps.vercel-preview-deploy.outputs.preview-url }}
  #   steps:
  #     - uses: actions/checkout@v3
  #     - uses: pnpm/action-setup@v2
  #       with:
  #         version: 8
  #     - name: Install Vercel CLI
  #       run: pnpm install --global vercel@latest
  #     - uses: amondnet/vercel-action@v20 #deploy
  #       id: vercel-preview-deploy
  #       with:
  #         vercel-token: ${{ secrets.VERCEL_TOKEN }} # Required
  #         github-token: ${{ secrets.GITHUB_TOKEN }} #Optional
  #         vercel-org-id: ${{ secrets.VERCEL_ORG_ID}} #Required
  #         vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID}} #Required
  #         github-comment: false
  #         zeit-token: ${{secrets.VERCEL_TOKEN}}

  deploy:
    runs-on: ubuntu-latest
    environment:
      name: Produktion
      url: ${{ steps.vercel-prod-deploy.outputs.preview-url }}
    needs:
      - typecheck-and-build
    steps:
      - uses: actions/checkout@v3
      - uses: pnpm/action-setup@v2
        with:
          version: 8
      - name: Install Vercel CLI
        run: pnpm install --global vercel@latest
      - uses: amondnet/vercel-action@v20 #deploy
        id: vercel-prod-deploy
        with:
          vercel-token: ${{ secrets.VERCEL_TOKEN }}
          github-token: ${{ secrets.GITHUB_TOKEN }}
          vercel-args: "--prod"
          vercel-org-id: ${{ secrets.VERCEL_ORG_ID}}
          vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID}}
          github-comment: false
          zeit-token: ${{secrets.VERCEL_TOKEN}}
  publish:
    runs-on: ubuntu-latest
    needs:
      - typecheck-and-build
    permissions:
      packages: write
      contents: read

    steps:
      - uses: actions/checkout@v3
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build the hello-docker Docker image
        run: |
          docker build . --tag ghcr.io/vincent-thomas/tdrive:latest
          docker push ghcr.io/vincent-thomas/tdrive:latest
